@page "/"
@using Models.ViewModels.Api
@using Refit
@using UI.Interfaces
@inject IGoalApi GoalApi
@inject ILogger<IGoalApi> Logger

<PageTitle>Gaol-Keeping</PageTitle>

<h1> Welcome to gaol keeping website </h1>

<AuthorizeView>
    <Authorized Context="GoalIndex">
        <EditForm Model="@_model" OnValidSubmit="@(HandleUpdateTodayGoal)">
            <DataAnnotationsValidator/>

            <HxInputText Label="Goal #1" @bind-Value="@_model.Gaol1" Placeholder="Enter goal #1 text here." Hint="Hint: enter short, precise description what you want to do today"/>

            <HxInputText Label="Goal #2" @bind-Value="@_model.Gaol2" Placeholder="Enter goal #2 text here." Hint="Hint: enter short, precise description what you want to do today"/>

            <HxInputText Label="Goal #3" @bind-Value="@_model.Gaol3" Placeholder="Enter goal #3 text here." Hint="Hint: enter short, precise description what you want to do today"/>
            
            <HxSubmit Color="ThemeColor.Primary">Save</HxSubmit>

        </EditForm>
    </Authorized>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>


@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private GoalViewModel _model = new();

    private GoalViewModel? existingTodayGaol;

    public async Task HandleUpdateTodayGoal()
    {
        try
        {
            if (existingTodayGaol != null)
            {
                _model = await GoalApi.UpdateTodayGoal(_model);
            }
            else
            {
                _model = await GoalApi.SaveTodayGoal(_model);
            }
        }
        catch (ApiException e)
        {
            Logger.LogError(e, "Failed to update today goal.");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var userIdentity = (await authenticationStateTask).User.Identity;
        if (userIdentity is {IsAuthenticated: false })
        {
            return;
        }

        existingTodayGaol = await GoalApi.GetTodayGaol();

        if (existingTodayGaol != null)
        {
            _model = existingTodayGaol;
        }
    }
}